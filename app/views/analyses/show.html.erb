<div class="row">
  <div id="show-caption" class="col-lg-12">
    <%= show_title(@analysis) %>
  </div>
</div>
<div class="row">
  <div id="show-tools" class="col-lg-4">
    <div class="row btn-toolbar tool-selector" role="toolbar">
      <div class="btn-group btn-group-sm">
        <% if @analysis.has_image? %>
          <%= link_to picture_analysis_path(@analysis), class: "btn btn-default  activate", id: "picture-button", remote: true do %>
            <span class="glyphicon glyphicon-picture"></span>
          <% end %>
        <% end %>
      </div>
      <% if can? :update, @analysis %>
      <div class="btn-group btn-group-sm">
        <%= link_to edit_analysis_path(@analysis), class: "btn btn-default", id: "pencil-button", remote: true, title: "edit analysis information" do %>
          <span class="glyphicon glyphicon-pencil"></span>
        <% end %>
        <%= link_to property_analysis_path(@analysis), class: "btn btn-default", id: "cog-button", remote: true, title: "edit global ID" do %>
          <span class="glyphicon glyphicon-cog"></span>
        <% end %>
      </div>
      <% end %>
    </div>
    <img>
    <div class="row tool-content">
    </div>
  </div>
  <div id="show-body" class="col-lg-8">
   <% tab_info = [
        ["at-a-glance",nil,"show representative properties of a record"],
        ["bib",@analysis.bibs,"show bibliography related to a record"],
        ["file",[@analysis.fits_file].concat(@analysis.attachment_files).compact,"show image of a record"]] %>
    <!-- Nav tabs -->
    <ul class="nav nav-tabs">
      <% tab_info.each do |key,array,message| %>
       <li class="<%= active_if_current(key) %>" ><a href="#<%= key %>" data-toggle="tab" title="<%= message %>"><%= key + data_count(array) %></a></li>
      <% end %>
    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
      <% tab_info.each do |key,array,message| %>
       <div class="tab-pane<%= active_if_current(key)%>" id="<%= key %>"><%= render partial: key.underscore %></div>
      <% end %>
    </div>
  </div>
</div>

<script>
  var FITS = astro.FITS;
  console.log(FITS);
  // Define a callback function for when the FITS file is received
  var callback = function() {
    // Get the first header-dataunit containing a dataunit
    var hdu = this.getHDU();
    // Get the first header
    var header = this.getHeader();
    // or we can do
    var header = hdu.header;
    // Read a card from the header
    var bitpix = header.get('BITPIX');
    // Get the dataunit object
    var dataunit = hdu.data;
    // or we can do
    var dataunit = this.getDataUnit();
    // Do some wicked client side processing ...
    var height = hdu.data.height;
    var width = hdu.data.width;
    var buf = dataunit.buffer;
    var dataview = new DataView(buf);
    var exampledata = new Float64Array(height * width);
    byteOffset = 0;
    for (y = 0; y < height; y++) {
      for (x = 0; x < width; x++) {
        exampledata[(y*width)+x] = dataview.getFloat64(byteOffset);
        byteOffset += 8;
      }
    }

    const canvas = document.getElementById("plot-fits");
    const plot = new plotty.plot({
      canvas,
      data: exampledata,
      width: width,
      height: height,
      domain: [0, 25],
      colorScale: "viridis"
    });
    plot.render();        
  }    
  // Set path to FITS file
  //var url = "/some/FITS/file/on/your/server.fits";
  var url = "<%= @analysis.fits_file.path if @analysis.fits_file %>";
  // Initialize a new FITS File object
  var fits = new FITS(url, callback); 
  console.log(fits); 
</script>


